* cndp-policy

Test the feasibility of directing Kubernetes Pod traffic to userspace for policy enforcement.
XDP programs are used to redirect packets to CNDP where a policy engine can apply its
ruleset.

The motivation for implementing policy in userspace is to avoid costly or challenging
implementation in BPF, netfilter or kernel code. The hope is that new policy features can be
delivered quickly in userspace and that a userspace implementation can handle changes in policy
rules more efficiently.

** Latency

The first measure of interest is the end to end latency of redirecting Pod to Pod packets via
CNDP.

*** Test Environment

The test environment uses network namespaces connected with veth pairs as simulated Pods and
runs CNDP in Podman. For ease of traffic forwarding, 2 veths are added to the CNDP namespace so
that it can be configured to forward traffic between them.

The test environment uses
https://github.com/xdp-project/xdp-tutorial/tree/master/packet03-redirecting
and scripts to setup additional veth pairs in a CNDP container.

[[file:images/cndp-bidir-bench.png]]

*** Results

Some rudimentary latency measurements were gathered using ping. The latency reported by ping
varies significantly depending on the packet interval so several results were collected.

The following graph shows the full round-trip latency which includes forwarding by CNDP in
*both* directions. The cost of a single direction redirect via CNDP is therefore half the
latency shown in the table. XDP Redirect without CNDP and plain kernel subnet routing are also
shown for comparison.

#+plot: title:"Average Ping Latency For 5 Packets (ms)"
#+plot: ind:1 deps:(2 3 4) type:2d with:histograms
#+plot: set:"xlabel 'Interval (s)'" set:"yrange[0:]"
#+plot: file:"images/ping-latency-by-interval.png"
| Interval (s) | CNDP Average Latency | XDP Redirect Only | Kernel Routing |
|--------------+----------------------+-------------------+----------------|
|            1 |                0.137 |             0.042 |          0.045 |
|          0.1 |                0.089 |             0.039 |          0.037 |
|         0.01 |                0.078 |             0.040 |          0.041 |
|        0.001 |                0.060 |             0.032 |          0.035 |
|          0.0 |                0.069 |             0.024 |          0.026 |

[[file:images/ping-latency-by-interval.png]]

It is worth noting that the first ping packet typically shows a higher latency in the ~140-180us
range. We need to assess whether this impacts a design that sends the first packet to
userspace. See [[file:cndp-ping-results.org][ping results]] for details. The following graph shows first packet latency.

#+plot: title:"Ping Latency For First Packet (ms)"
#+plot: ind:1 deps:(2 3 4) type:2d with:histograms
#+plot: set:"yrange[0:]"
#+plot: file:"images/ping-latency-first-by-interval.png"
|              | CNDP Latency | XDP Redirect Only | Kernel Routing |
|--------------+--------------+-------------------+----------------|
| First Packet |        0.159 |             0.070 |          0.050 |

[[file:images/ping-latency-first-by-interval.png]]


For comparison, here are latency measurements from netperf ~tcp_rr~.

#+begin_example
# netperf -H 10.12.2.2 -t TCP_RR -- \
    -o min_latency,mean_latency,max_latency,stddev_latency
MIGRATED TCP REQUEST/RESPONSE TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to 10.12.2.2 () port 0 AF_INET
Minimum Latency Microseconds,Mean Latency Microseconds,Maximum Latency Microseconds,Stddev Latency Microseconds
42,                          46.50,                    202,                         4.36
#+end_example

** Reference Environments

*** XDP Redirect

[[file:images/xdp-redirect.png]]

*** Kernel Subnet Routing

[[file:images/routed-baseline.png]]
